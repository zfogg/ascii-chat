---
# clang-tidy configuration for ascii-chat project
# Based on Makefile configuration and desired check categories

# Enable comprehensive static analysis checks equivalent to scan-build
# This includes all clang-analyzer checks (same as scan-build) plus additional modern checks
Checks: '-*,
readability-*,
performance-*,
portability-*,
bugprone-*,
clang-analyzer-*,
misc-*,
cert-*,
-readability-identifier-length,
-readability-magic-numbers,
-readability-function-cognitive-complexity,
-readability-uppercase-literal-suffix,
-readability-braces-around-statements,
-readability-avoid-const-params-in-decls,
-readability-use-concise-preprocessor-directives,
-readability-duplicate-include,
-readability-implicit-bool-conversion,
-readability-function-size,
-readability-redundant-declaration,
-readability-non-const-parameter,
-readability-isolate-declaration,
-bugprone-easily-swappable-parameters,
-bugprone-reserved-identifier,
-bugprone-narrowing-conversions,
-bugprone-implicit-widening-of-multiplication-result,
-portability-avoid-pragma-once,
-misc-no-recursion,
-misc-include-cleaner,
-cert-env33-c,
-cert-dcl37-c,
-cert-dcl51-cpp,
-cert-oop*,
-modernize-*,
-cppcoreguidelines-*,
-google-*,
-hicpp-*,
-fuchsia-*,
-llvm-*,
-zircon-*,
-clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling,
-cppcoreguidelines-avoid-non-const-global-variables,
-modernize-macro-to-enum,
-readability-math-missing-parentheses,
-cppcoreguidelines-init-variables'

# Filter headers to check (only project headers, not system/external headers)
HeaderFilterRegex: '.*ascii-chat/.*\.(h|hpp)$'
# HeaderFilterRegex: '.*'

# Treat warnings as errors for CI/CD
# WarningsAsErrors: ''

# Check configuration options
CheckOptions:
  # Readability checks
  - key: readability-function-size.LineThreshold
    value: 140
  - key: readability-function-size.StatementThreshold
    value: 60
  - key: readability-magic-numbers.IgnoredIntegerValues
    value: '0;1;2;3;4;8;16;32;64;128;256;512;1024'
  - key: readability-identifier-length
    value: 'false'
  
  # Performance checks
  - key: performance-move-const-arg.CheckTriviallyCopyableMove
    value: 'false'
  - key: performance-unnecessary-value-param.AllowedTypes
    value: ''
  
  # Bugprone checks
  - key: bugprone-assert-side-effect.AssertMacros
    value: 'assert,ASSERT'
  - key: bugprone-string-constructor.WarnOnLargeLength
    value: 'true'
